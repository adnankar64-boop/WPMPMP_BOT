import os
import time
import threading
import requests
import telebot
from flask import Flask

# ───── Configuration ─────
BOT_TOKEN = "7762972292:AAHrFaISQDfAycGjAqMqqofVjpouNF4z4Cg"
COINGLASS_API_KEY = "6e5da618d74344f69c0e77ad9b3643c0"
CHECK_INTERVAL = 3600  # seconds

bot = telebot.TeleBot(BOT_TOKEN)
ADMIN_ID = None
app = Flask(__name__)


# ───── Flask Route ─────
@app.route('/')
def home():
    return "✅ Whale Watcher Bot is Running!"


# ───── Run Flask (Replit compatible) ─────
def run_flask():
    port = int(os.environ.get("PORT",
                              5000))  # فقط همین پورت کار می‌کنه تو Replit
    app.run(host='0.0.0.0', port=port)


# ───── Whale Alert Logic ─────
def get_long_short_data():
    url = "https://open-api.coinglass.com/public/v2/longShortRatio"
    headers = {"coinglassSecret": COINGLASS_API_KEY}
    try:
        res = requests.get(url, headers=headers)
        data = res.json()
        if not data.get("success"):
            print("❌ Error:", data.get("message"))
            return []
        return data.get("data", [])
    except Exception as e:
        print("❌ Exception:", e)
        return []


def send_whale_alert():
    if ADMIN_ID is None:
        print("ℹ️ ADMIN_ID not set (send /start in Telegram)")
        return

    data = get_long_short_data()
    alerts = []
    for item in data:
        try:
            ratio = float(item.get("longShortRatio", 0))
            symbol = item.get("symbol", "N/A")
            if ratio > 1.5:
                alerts.append(f"🟢 Long: {symbol} – {ratio:.2f}")
            elif ratio < 0.7:
                alerts.append(f"🔴 Short: {symbol} – {ratio:.2f}")
        except Exception as e:
            print(f"[Parse error] {e}")

    message = (
        "📊 *Whale Status (1H)*\n\n" +
        "\n".join(alerts)) if alerts else "⚠️ No notable whale positions."
    try:
        bot.send_message(ADMIN_ID, message, parse_mode="Markdown")
    except Exception as e:
        print(f"[Telegram error] {e}")


def start_loop():
    while True:
        try:
            send_whale_alert()
        except Exception as e:
            print(f"[Loop error] {e}")
        time.sleep(CHECK_INTERVAL)


# ───── Telegram /start ─────
@bot.message_handler(commands=['start'])
def handle_start(msg):
    global ADMIN_ID
    ADMIN_ID = msg.chat.id
    bot.send_message(ADMIN_ID,
                     "✅ ربات فعال شد. هر ساعت وضعیت نهنگ‌ها رو می‌فرسته.")


# ───── Run Everything ─────
if __name__ == "__main__":
    print("⏳ Waiting for /start command...")
    threading.Thread(target=run_flask, daemon=True).start()
    threading.Thread(target=start_loop, daemon=True).start()
    bot.infinity_polling()
